Задача на PHP
Реализовать объекты
команда (Team)
1. имеет название. Приватное свойство.
PHP
1. $team1 = new Team("Барселона");

2. может иметь страну. Приватное свойство.
PHP
1. $team1->setCountry("Испания");

группа (Group) - для объединения команд
1. имеет название. Приватное свойство.
PHP
1. $group1 = new Group("Группа А");

2. состоит из команд. Команды хранятся в приватном свойстве. Позволяет добавлять в себя команды таким способом.
PHP
1. $group1
2. ->addTeam($team1)
3. ->addTeam($team2);

4. позволяет создавать группу на основе существующей
PHP
1. $group1 = new Group("Группа Б", $group2);
при этом все команды существующей группы попадают в новую

5. Позволяет генерировать расписание игр команд, чтобы каждая команда встретилась с каждой (так называемая круговая система,
round-robin).
PHP
1. $group->generateCalendar();

В расписании выводится имя группы, номер тура, пары команд с их именами и странами
Пример: есть 2 команды:
имя: Барселона, страна: Испания
имя: Реал, страна Испания
Они находятся в Группе “А”
расписание
Группа “А”, 1 тур
Барселона (Испания) - Реал (Испания)
для 3 команд (для упрощения имена команд 1, 2, 3)
расписание
1 тур
1 - 2
2 тур
1 - 3
3 тур
2 - 3
Должно работать с любым количеством команд, как с четным так и нечетным
Подсказка
Ниже описан алгоритм, как это можно реализовать, для любого количества команд (на примере 8 команд). Можно использовать
другой способ
1 тур
Напишите команды в 2 ряда следующим образом
1 2 3 4
8 7 6 5
Пары команд в результате (одна колонка выше - 1 пара)
1 - 8
2 - 7
3 - 6
4 - 5
далее двигаем команды по часовой стрелке, не двигая первую команду. Т.е. 2 тур
1 8 2 3
7 6 5 4
Пары команд в результате
1 - 7
8 - 6
2 - 5
3 - 4
Для третьего и последующих туров продолжаем двигать команды по кругу, не двигая команду 1. Если число команд нечетное, то
одна из команд должна пропускать тур. Это можно сделать введением команды-заглушки, которая доведет число команд до
четного.